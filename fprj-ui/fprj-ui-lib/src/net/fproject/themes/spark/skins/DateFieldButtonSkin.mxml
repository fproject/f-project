<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////
//
// Â© Copyright f-project.net 2010-present.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
///////////////////////////////////////////////////////////////////////////////
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21">
	
	<fx:Metadata>
		<![CDATA[ 
		[HostComponent("net.fproject.ui.datetime.supportClasses.DateFieldButton")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.core.FlexGlobals;
			/* Define the skin elements that should not be colorized. 
			For dropDownList buttons, the graphics are colorized but the arrow is not. */
			static private const exclusions:Array = ["icon"];
			
			override public function get colorizeExclusions():Array {return exclusions;}
			
			override protected function initializationComplete():void {
				useChromeColor = true;
				super.initializationComplete();
				var iconSrc:* = getStyle('icon');
				if(iconSrc == undefined)
				{
					var mDeclaration:CSSStyleDeclaration = 
						FlexGlobals.topLevelApplication.styleManager.getStyleDeclaration("mx.controls.DateField");
					if(mDeclaration != null)
						iconSrc = mDeclaration.getStyle('upSkin');
				}
				icon.source = iconSrc;
			}
		]]>		
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	
	<!--- @private -->
	<!--<s:Rect id="border" left="0" right="24" top="0" bottom="0" width="50" height="20">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" 
								 alpha="0.5625"
								 alpha.down="0.6375" />
				<s:GradientEntry color="0x000000" 
								 alpha="0.75" 
								 alpha.down="0.85" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>-->
	
	<s:BitmapImage id="icon" right="1" verticalCenter="0"/>
</s:SparkSkin>
