<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true">
	<fx:Script>
		<![CDATA[
			import mx.events.PropertyChangeEvent;
			
			import net.fproject.ui.datetime.supportClasses.Time;
			
			override public function set data(value:Object) : void
			{
				if(data is Time)
					IEventDispatcher(data).removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onDataFieldChanged);
				super.data = value;
				if(value is Time)
				{
					this.labelDisplay.text = Time(value).label;
					this.enabled = Time(value).enabled;
					IEventDispatcher(value).addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onDataFieldChanged);
					invalidateRendererState();
				}
			}
			
			private function onDataFieldChanged(e:PropertyChangeEvent):void
			{
				if(e.property == "enabled")
					this.enabled = e.newValue;
				else if(e.property == "isHinted")
					invalidateRendererState();
			}
			
			override protected function getCurrentRendererState() : String
			{
				if(!selected && !hovered && data is Time && Time(data).isHinted)
					return "isHinted";
				else
					return super.getCurrentRendererState();
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="isHinted"/>
		<s:State name="hovered" stateGroups="hoveredGroup"/>
		<s:State name="selectedAndHovered" stateGroups="selectedGroup,hoveredGroup"/>
		<s:State name="selected" stateGroups="selectedGroup"/>
	</s:states>
	
	<s:Label id="labelDisplay" text="{data}" maxDisplayedLines="1"
			 top="5" left="5" right="5" bottom="5"
			 color.isHinted="{getStyle('hintedTextColor')}"/>
	
</s:ItemRenderer>
